pipeline {
    agent any

    stages {
        stage('prepare an environment') {
            steps {
                script {
                    try {
                        withCredentials([usernamePassword(
                            credentialsId: 'AWS_ACCESS_KEY', 
                            usernameVariable: 'awsAccessKeyId', 
                            passwordVariable: 'awsSecretAccessKey'
                        )]) {
                            env.AWS_ACCESS_KEY_ID = env.awsAccessKeyId
                            env.AWS_SECRET_ACCESS_KEY = env.awsSecretAccessKey
                        }
                    }
                    catch(e) {}
                }
            }
        }

        stage('retrieve artifacts from github') {
            steps {
                deleteDir()
                checkout scm
            }
        }

        stage('build the artifacts') {
            steps {
                dir('.build') {
                    sh 'docker-compose build --force-rm --no-cache --parallel'
                }
            }
        }

        stage('publish the artifacts') {
            steps {
                dir('.build') {
                    sh 'docker-compose push'
                }
            }
        }
    }

    post {
        success {
            // cleanWs()
            echo 'success'
        }
        failure {
            echo 'fail'
        }
    }
}
